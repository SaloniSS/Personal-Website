[
  {
    "featured": false,
    "_id": "5f1a70acab6fe3241c950264",
    "portfolio": "https://devpost.com/software/theratracker",
    "code": "https://github.com/SaloniSS/TheraTracker",
    "title": "TheraTracker",
    "organization": "TAMUhack 2019",
    "date": "January 2019",
    "description": "Designed an Android mobile application which helps patients keep track of mood changes and medication and connect their data to their doctor",
    "contribution": "Implemented a password-less login that used pre-verified user fingerprint. Developed an emotion-detecting function which detects the users’ mood from their selfie",
    "category": "regular",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a70ccab6fe3241c950265",
    "portfolio": "https://devpost.com/software/dfw-dtw",
    "code": "https://github.com/SaloniSS/DFW-FTW",
    "title": "DFW-FTW",
    "organization": "HackDFW 2019",
    "date": "February 2019",
    "description": "Implemented a web tool which provides personalized recommendations and optimal are of residence in the DFW area to users based on their interests, hobbies, and job",
    "contribution": "Developed the front-end of the web tool using HTML, CSS, PHP and JavaScript. Working on integrating Job Search and Apartment Search APIs to improve the usability of the app",
    "award": "Sponsor Prize (Dallas Regional Chamber: Say Yes to Dallas",
    "category": "winner",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a70f7ab6fe3241c950266",
    "portfolio": "https://devpost.com/software/spacefinder",
    "code": "https://github.com/SaloniSS/Space-Finder",
    "title": "SpaceFinder",
    "organization": "HackUTD Spring 2019",
    "date": "February 2019",
    "description": "Implemented a mobile web application which lets students find and check-in to empty study rooms and study groups in buildings across the campus",
    "contribution": "Developed the front-end of the web app tool using HTML, CSS, PHP and JavaScript",
    "award": "3rd Place Overall (based on completion, design, technicality, and creativity)",
    "category": "winner",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a7106ab6fe3241c950267",
    "portfolio": "https://devpost.com/software/sense-your-own-adventure",
    "code": "https://github.com/SaloniSS/Sense-Your-Own-Adventure",
    "title": "Sense Your Own Adventure",
    "organization": "HackUNT 2019",
    "date": "April 2019",
    "description": "Implemented a web game which teaches visually impaired and dyslexic people touch typing using a auditory-immersed experience in the form of a story",
    "contribution": "Developed the front end using React and the database using MongoDB in the form of a binary tree",
    "category": "regular",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a7123ab6fe3241c950268",
    "portfolio": "https://github.com/SaloniSS/langbot/blob/master/Langbot%20_%20ACM%20Projects.pptx",
    "code": "https://github.com/SaloniSS/langbot",
    "title": "LangBot",
    "organization": "ACM Projects - Fall 2019",
    "date": "September 2019 - December 2019",
    "description": "Implemented a chatbot that is trained to teach people how. to read, write, understand and speak a new language",
    "contribution": "Developed the back-end using JavaScript in React Native with DialogFlow, FireBase and GCP Translation",
    "category": "long",
    "__v": 0
  },
  {
    "featured": true,
    "_id": "5f1a7134ab6fe3241c950269",
    "portfolio": "https://devpost.com/software/newtral-the-neutral-news-filter",
    "code": "https://github.com/SaloniSS/Newtral",
    "title": "Newtral - The Neutral News Filter",
    "organization": "HackUTD Fall 2019",
    "date": "November 2019",
    "description": "Implemented a chrome extension which differentiates objective lines and subjective lines of a news article using a custom API",
    "contribution": "Developed the back-end using Python with NLP to analyze text and create API data and GCP to host the API server",
    "award": "Sponser Prize (Cognizant: Best Text Objectivity Analysis), Top 5 Finalists (based on completion, design, technicality, and creativity)",
    "category": "winner",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a714bab6fe3241c95026a",
    "portfolio": "",
    "code": "https://github.com/ieee-utd/project-accessibility",
    "title": "Project Accessibility",
    "organization": "IEEE Forge - Spring 2020",
    "date": "February 2020 - May 2020",
    "description": "Implementing a desktop application that allows blind or visually impaired individuals to chat with IT support at Computers for the Blind and receive basic offline help",
    "contribution": "Designing the backend server using Express on Node and MongoDB, as well as the frontend client using React and Electron",
    "category": "long",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a715cab6fe3241c95026b",
    "portfolio": "https://devpost.com/software/meeting-match",
    "code": "https://github.com/SaloniSS/Meeting-Match",
    "title": "Meeting Match",
    "organization": "HackUNT 2020",
    "date": "February 2020",
    "description": "Implemented a website that matches employees with coworkers working on different projects based on common interests to boost morale and create a sense of community and camaraderie among employees",
    "contribution": "Developed the backend using Typescript to find employees with common interests",
    "category": "regular",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a716cab6fe3241c95026c",
    "portfolio": "https://devpost.com/software/solitogether",
    "code": "https://github.com/SaloniSS/SoliTogether",
    "title": "SoliTogether",
    "organization": "RowdyHacks 2020",
    "date": "March 2020",
    "description": "Implemented a website that to set up daily task to-dos and get resources on how to keep occupied and supported when alone, along with signing up to receive daily messages to get supportive messages or text messages everyday",
    "contribution": "Designed the front end using React and deployed the backend server and frontend client using Google App Engine and Firebase",
    "category": "regular",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a7178ab6fe3241c95026d",
    "portfolio": "https://devpost.com/software/planting-happiness",
    "code": "https://github.com/SaloniSS/Planting-Happiness",
    "title": "Planting Happiness",
    "organization": "EarthXHacks 2020",
    "date": "April 2020",
    "description": "Implemented a mobile application where users can share ways that they stay healthy and productive during quarantine while gaining points through daily goals they set for themselves which can be redeemed for personal and community perks",
    "contribution": "Designed the front end using React Native and deployed the backend server and frontend client using Google App Engine and Firebase",
    "category": "regular",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a718aab6fe3241c95026e",
    "portfolio": "https://devpost.com/software/moneymoneymoney",
    "code": "https://github.com/SaloniSS/Money-Money-Money",
    "title": "Money Money Money",
    "organization": "Hacklarious - MLH Summer League 2020",
    "date": "May 2020",
    "description": "Implemented a chrome extension which takes the price of the amazon item you’re looking at and converts it into the equivalent number of burritos, boba, nuggets and more",
    "contribution": "Developed the back-end using Python with Flask to create API data and GCP to host the API server, along with the front-end extension using React while implementing Chrome Extension API and Firebase to deploy the accompanying website",
    "award": "Best Virtual Demo",
    "category": "winner",
    "__v": 0
  },
  {
    "featured": true,
    "_id": "5f1a7199ab6fe3241c95026f",
    "portfolio": "https://devpost.com/software/naturedex",
    "code": "https://github.com/SaloniSS/NatureDex",
    "title": "NatureDex",
    "organization": "BackyardHacks- MLH Summer League 2020",
    "date": "May 2020",
    "description": "Implemented a mobile application that identifies plants by analyzing photos that the user takes or uploads from the camera roll, and stores them in the profile",
    "contribution": "Developed the back-end using Node.js with Express and MongoDB to create user information and store API data and App Engine to host the server, as well as the mobile app using React Native and the website using React along with GCP to manage authorization and Firebase to deploy the frontend",
    "award": "First Overall (based on originality, technology, design, completion, learning and theme)",
    "category": "winner",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a71abab6fe3241c950270",
    "portfolio": "https://devpost.com/software/recycle-bun",
    "code": "https://github.com/SaloniSS/Recycle-Bun",
    "title": "Recycle Bun",
    "organization": "RookieHacks Summer 2020",
    "date": "May 2020",
    "description": "Implemented a “bullet dodge” or “barrage” game, where the player controls a charcter who is trying to properly recycle different item using Unity Game Engine and C# scripts",
    "contribution": "Built the website using React for the frontend and GCP Storage to store and download the standalone desktop files along with Firebase to deploy it",
    "category": "regular",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a71deab6fe3241c950271",
    "portfolio": "https://devpost.com/software/recreart",
    "code": "https://github.com/SaloniSS/RecreArt",
    "title": "RecreArt",
    "organization": "Hack The Northeast 2020",
    "date": "June 2020",
    "description": "Implemented a mobile application that provides users with different famous portraits to recreate their in their own way, with AR props and ranks the recreations’ closeness to the original based on color and texture",
    "contribution": "Developed the back-end using Node.js with Express and MongoDB to create user information and store API data and App Engine to host the server, along with creating and hosting the Flask server environment on App Engine, as well as the mobile app using React Native along with GCP to manage authorization",
    "award": "Best Use of EchoAR",
    "category": "winner",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a71edab6fe3241c950272",
    "portfolio": "https://devpost.com/software/bridge-the-gap-wrpedk",
    "code": "https://github.com/SaloniSS/Bridge-The-Gap",
    "title": "Bridge The Gap",
    "organization": "Hack Girl Summer 2020",
    "date": "June 2020",
    "description": "Implemented a website for women to connect with other women in tech, share experiences, learn about opportunities, and get answers to frequently asked questions",
    "contribution": "Developed the back-end using Node.js with Express and MongoDB to create user information and store API data and App Engine to host the server, along with connecting the backend to the frontend using Axios, some frontend screens and handling user authorization using React.js",
    "category": "regular",
    "__v": 0
  },
  {
    "featured": true,
    "_id": "5f1a71fdab6fe3241c950273",
    "portfolio": " https://devpost.com/software/quack-the-code",
    "code": "https://github.com/SaloniSS/Quack-The-Code",
    "title": "Quack The Code",
    "organization": "Same Home Different Hacks - MLH Summer League 2020",
    "date": "June 2020",
    "description": "Implemented a website and desktop productivity app which brings you all the aid of rubber duck debugging along with inspirational quotes, facts, advice, jokes, and coding quizzes on the click of a button or your voice commands",
    "contribution": "Developed the Google Assistant skill using GCP DialogFlow for the intent creation and conversation flow which is made using Firebase along with Google Cloud Functions with Node.js to call external APIs to provide information to the conversation agent. Developed the backend was built using Node.js to handle user actions along with text-to-speech as well as parts of the frontend using React for the website along with Electron for the Desktop app.",
    "award": "Best use of Google Cloud",
    "category": "winner",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f1a720eab6fe3241c950274",
    "portfolio": "https://devpost.com/software/therapy-tunes",
    "code": "https://github.com/SaloniSS/Therapy-Tunes",
    "title": "Therapy And Tunes",
    "organization": "Hackcation Summer 2020",
    "date": "July 2020",
    "description": "Implemented a mobile application that talks to users about their feelings and recommends songs based on mood along with providing activities and resources",
    "contribution": "Developed the app frontend using React Native along with Expo and Spotify API to implement the chatting interface and find songs based on moods, along with the Google Assistant skill using GCP Functions and DialogFlow for the intent creation and conversation flow",
    "category": "regular",
    "__v": 0
  },
  {
    "featured": true,
    "_id": "5f41e7faa8f06600070f85c4",
    "portfolio": "https://productivitree.web.app/",
    "code": "https://github.com/SaloniSS/ProductiviTree",
    "title": "ProductiviTree",
    "organization": "SummerHacks 2020, InternHacks 2020",
    "date": "May 2020 - August 2020",
    "description": "Implemented a mobile application where users can share ways that they stay healthy and productive while gaining points through daily goals they set for themselves which can be redeemed for tree plantations",
    "contribution": "Developed the front end using React Native, set up authorization using Firebase, and deployed the backend server and frontend client using Google Cloud Platform",
    "award": "Best Technical Problem - InternHacks 2020",
    "category": "long",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5f67baecd72f0b0007b4b267",
    "portfolio": "https://devpost.com/software/digiboard-2wf73t",
    "code": "https://github.com/SaloniSS/Lecturely",
    "title": "Lecturely",
    "organization": "PennApps 2020",
    "date": "September 2020",
    "description": "Implemented a web tool where teachers can engage students through the use of virtual whiteboards",
    "contribution": "Developed the backend of the app using Firebase Firestore, setup the authentication using Auth0 and worked on the frontend for the homepage using React",
    "category": "regular",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5fb9c4ac1882b5000a644c8d",
    "portfolio": "https://spectacle.hackmit.org/project/243",
    "code": "https://github.com/SaloniSS/Alrighty",
    "title": "Alrighty",
    "organization": "HackMIT 2020",
    "date": "September 2020",
    "description": "Implemented a web tool which performs color-coded, sentence-by-sentence tone analysis on the text that the user provides as well as a subjectivity score for each line",
    "contribution": "Developed the backend of the app using Flask, NLTK, and TextBlob and hosted this code on IBM Cloud Functions, along with working on the frontend using React",
    "category": "regular",
    "__v": 0
  },
  {
    "featured": true,
    "_id": "5fbb1a1c150e8b000a8b7524",
    "portfolio": "https://devpost.com/software/empower-pjthlb",
    "code": "https://github.com/SaloniSS/WeHack",
    "title": "Empower",
    "organization": "WEHack 2020",
    "date": "October 2020",
    "description": "Implemented a web application that guides women entrepreneurs by providing them with open-source advice and directory of other small businesses",
    "contribution": "Developed the frontend using React and Firebase Firestore to access and store information in the database",
    "award": "Second Overall (based on originality, technology, design, completion, learning and theme)",
    "category": "winner",
    "__v": 0
  },
  {
    "featured": false,
    "_id": "5fbb1a97150e8b000a8b7525",
    "portfolio": "https://devpost.com/software/secure-okyqrh",
    "code": "https://github.com/SaloniSS/tmobile",
    "title": "Secure",
    "organization": "T-Mobile Hacktober 2020",
    "date": "October 2020",
    "description": "Implemented a web application that informs users about the Rugged approach by providing some CTF challenges to learn about web and network vulnerabilities along with website security scanner",
    "contribution": "Developed the backend API using Flask to perform a mock penetration testing on websites to test for security vulnerabilities along with creating the frontend using React to access the API",
    "category": "regular",
    "__v": 0
  },
  {
    "featured": true,
    "_id": "6036e58a3df9f2000a61347d",
    "title": "Murder Mystery",
    "date": "December 2020",
    "organization": "Who Done It Hacks?",
    "award": "Best Use of Google Cloud",
    "description": "Implemented a web application mystery game where the users dress up as detectives from popular fiction and work through clues to figure out the assailant. Developed the Vision API using Flask in Python to search for labels and objects unique to each character using Google Vision API along with image comparison using Deep AI to find the most likely match between characters.\n",
    "contribution": "Developed an image upload api using Express and Multer using Node.js along with Google Cloud Storage to temporarily store images in Firebase. Developed the backend was built using Node.js to handle user actions along with text-to-speech as well as parts of the frontend using React for the website.\n",
    "portfolio": "https://devpost.com/software/who-done-it",
    "code": "https://github.com/SaloniSS/Who-Done-It",
    "category": "winner",
    "__v": 0
  }
]
